version: 2
jobs:
  # This job will test the actually plugin
  "test":
    machine:
      image: circleci/classic:latest

    environment:
      # Customize the JVM maximum heap limit
      # Needs to be updated along with gradle jvmargs
      _JAVA_OPTIONS: "-Xmx2g"

    steps:
      - checkout

      # Set the JVM heap size to gradle as well
      - run: echo "org.gradle.jvmargs=-Xmx2G" >> gradle.properties

      # Download/Install Android SDK for testing
      - run: wget -q https://dl.google.com/android/repository/sdk-tools-linux-4333796.zip
      - run: unzip -q sdk-tools-linux-4333796.zip
      - run: mkdir $HOME/android-sdk
      - run: mv tools $HOME/android-sdk/tools
      - run: mkdir $HOME/android-sdk/licenses
      - run: echo -e "\nd56f5187479451eabf01fb78af6dfcb131a6481e" > "$HOME/android-sdk/licenses/android-sdk-license"
      - run: echo -e "\n84831b9409646a918e30573bab4c9c91346d8abd" > "$HOME/android-sdk/licenses/android-sdk-preview-license"

      # Try to restore cache (see ho to save cache below)
      - restore_cache:
          key: gradle-cache-v0-{{ checksum "build.gradle.kts" }}-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}

      - run:
          environment:
              ANDROID_HOME: "/home/circleci/android-sdk" # TODO: Try to don't hardcode me and use $HOME env variable
          command: ./gradlew test --no-daemon
          no_output_timeout: 30m

      - save_cache:
          paths:
            - ~/.gradle
          key: gradle-cache-v0-{{ checksum "build.gradle.kts" }}-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}

  # This job will publish the consumers from
  # the subprojects/consumers dir into the local maven
  "buildConsumersAndStore":
    machine:
      image: circleci/classic:latest

    environment:
      # Customize the JVM maximum heap limit
      # Needs to be updated along with gradle jvmargs
      _JAVA_OPTIONS: "-Xmx2g"

    steps:
    - checkout

    # Download/Install Android SDK for testing
    - run: wget -q https://dl.google.com/android/repository/sdk-tools-linux-4333796.zip
    - run: unzip -q sdk-tools-linux-4333796.zip
    - run: mkdir $HOME/android-sdk
    - run: mv tools $HOME/android-sdk/tools
    - run: mkdir $HOME/android-sdk/licenses
    - run: echo -e "\nd56f5187479451eabf01fb78af6dfcb131a6481e" > "$HOME/android-sdk/licenses/android-sdk-license"
    - run: echo -e "\n84831b9409646a918e30573bab4c9c91346d8abd" > "$HOME/android-sdk/licenses/android-sdk-preview-license"

    - run:
        working_directory: subprojects/consumer
        environment:
            ANDROID_HOME: "/home/circleci/android-sdk" # TODO: Try to don't hardcode me and use $HOME env variable
        command: ./gradlew androidArtifactJava androidArtifactRelease --no-daemon

    - store_artifacts:
        path: ~/.m2

  # This will publish the docs to now without setting an alias.
  "publishDocs":
    machine:
      image: circleci/classic:latest

    steps:
    - checkout
    
    # Try to restore cache / Should be available cause previous test build
    - restore_cache:
          key: gradle-cache-v0-{{ checksum "build.gradle.kts" }}-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}    

    # First install now
    - run: npm install -g now
    - run: ./gradlew publishDocsToNow --zeitToken=$NOW_TOKEN

  # Same as "publishDocs" but will set an alias afterwards
  "publishDocsWithAlias":
    machine:
      image: circleci/classic:latest

    steps:
    - checkout
    
    # Try to restore cache / Should be available cause previous test build
    - restore_cache:
          key: gradle-cache-v0-{{ checksum "build.gradle.kts" }}-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}        

    # First install now
    - run: npm install -g now
    - run: ./gradlew publishDocsToNow --zeitToken=$NOW_TOKEN createNowAlias --zeitToken=$NOW_TOKEN

workflows:
  version: 2
  build_and_publishDocs:
    jobs:
    - "test"
    - "buildConsumersAndStore"
    - "publishDocs":
        requires:
          - "test"
        filters:
          branches:
            ignore:
            - master
          tags:
            ignore:
            - /.*/
    - "publishDocsWithAlias":
        requires:
          - "test"
        filters:
          branches:
            only:
              - master
